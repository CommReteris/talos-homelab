---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 13.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2022.8.5
    env:
      TZ: "${TZ}"
      PYTHONUSERBASE: /config/deps
    envFrom:
      - secretRef:
          name: home-assistant
    # hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    service:
      main:
        ports:
          mdns-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          mdns-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353

    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: "traefik"
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID_2}.cfargotunnel.com"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_CASA}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
      local:
        enabled: true
        ingressClassName: "traefik"
        hosts:
          - host: &hostinternal "{{ .Release.Name }}.${SECRET_DOMAIN_INTERNAL}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *hostinternal

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config-v1
        volumeMounts:
          - name: config
            mountPath: /config
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${TRUENAS_VM_ADDRESS}"
            path: /mnt/tank/backups/softwarrself/home-assistant
        mountPath: /config/backups
        readOnly: false
      attachments:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${TRUENAS_VM_ADDRESS}"
            path: /mnt/tank/cameras-attachments
        mountPath: /camera-detection-attachments
      restore:
        enabled: false
        type: custom
        volumeSpec:
          nfs:
            server: "${TRUENAS_VM_ADDRESS}"
            path: /mnt/tank/backups/softwarrself/hass
        mountPath: /backup
        readOnly: false
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: hass-wifi-static
      secret.reloader.stakater.com/reload: "home-assistant"
    addons:
      codeserver:
        enabled: false
        image:
          repository: docker.io/codercom/code-server
          tag: 4.5.2
        env:
          TZ: "${TZ}"
        git:
          deployKeySecret: code-server
        workingDir: "/config"
        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"
        ingress:
          enabled: true
          ingressClassName: "traefik"
          annotations:
            external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
            external-dns.alpha.kubernetes.io/target: "${SECRET_CLOUDFLARE_TUNNEL_ID_2}.cfargotunnel.com"
          hosts:
            - host: &host "hass-config.${SECRET_DOMAIN_CASA}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host
        volumeMounts:
          - name: config
            mountPath: /config
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        memory: 4000Mi
